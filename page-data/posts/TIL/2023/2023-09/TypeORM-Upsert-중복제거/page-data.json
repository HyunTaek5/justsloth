{"componentChunkName":"component---src-template-post-tsx","path":"/posts/TIL/2023/2023-09/TypeORM-Upsert-중복제거","result":{"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/posts/book/review/한권으로-배우는-도커&쿠버네티스/"},"timeToRead":1,"frontmatter":{"title":"한 권으로 배우는 도커 & 쿠버네티스","series":"책 리뷰"}},{"fields":{"slug":"/posts/book/review/도시를-만드는-기술-이야기/"},"timeToRead":1,"frontmatter":{"title":"도시를 만드는 기술 이야기","series":"책 리뷰"}},{"fields":{"slug":"/posts/book/가상-면접-사례-솔루션/1장/"},"timeToRead":1,"frontmatter":{"title":"사용자 수에 따른 규모 확장성","series":"가상 면접 사례로 배우는 대규모 시스템 설계 기초"}},{"fields":{"slug":"/posts/book/review/게임AI를-위한-탐색-알고리즘/"},"timeToRead":1,"frontmatter":{"title":"게임 AI를 위한 탐색 알고리즘","series":"책 리뷰"}},{"fields":{"slug":"/posts/블로그-이관/"},"timeToRead":1,"frontmatter":{"title":"블로그 이관","series":null}},{"fields":{"slug":"/posts/블로그-글-시작하기/"},"timeToRead":1,"frontmatter":{"title":"기술 블로그 글 시작하기","series":"글 잘 쓰기"}},{"fields":{"slug":"/posts/TIL/2023/2023-12/프로젝트-회고/"},"timeToRead":1,"frontmatter":{"title":"2023 사내 프로젝트 회고","series":"배포 회고"}},{"fields":{"slug":"/posts/TIL/2023/2023-12/나무늘보-프롬프트/"},"timeToRead":1,"frontmatter":{"title":"GPT-4 나무늘보 프롬프트","series":"프롬프트"}},{"fields":{"slug":"/posts/TIL/2023/2023-12/채팅-리서치/"},"timeToRead":1,"frontmatter":{"title":"채팅 구현 관련 서비스 리서치","series":"리서치 기록"}},{"fields":{"slug":"/posts/TIL/2023/2023-12/NestJs/Request-LifeCycle/"},"timeToRead":1,"frontmatter":{"title":"NestJs - Request LifeCycle","series":"NestJs"}},{"fields":{"slug":"/posts/TIL/2023/2023-12/NestJs/LifeCycle/"},"timeToRead":1,"frontmatter":{"title":"NestJs - LifeCycle","series":"NestJs"}},{"fields":{"slug":"/posts/TIL/2023/2023-12/DirtyChecking/"},"timeToRead":1,"frontmatter":{"title":"더티 체킹","series":null}},{"fields":{"slug":"/posts/TIL/2023/2023-11/NestJs/Pipes/"},"timeToRead":1,"frontmatter":{"title":"NestJs - Pipes","series":"NestJs 개념 정리"}},{"fields":{"slug":"/posts/TIL/2023/2023-11/Nginx/"},"timeToRead":1,"frontmatter":{"title":"Docker-compose, Nginx와 함께하는 무중단 배포","series":"배포 회고"}},{"fields":{"slug":"/posts/TIL/2023/2023-11/NestJs/MetaData/"},"timeToRead":1,"frontmatter":{"title":"NestJs - MetaData","series":"NestJs 개념 정리"}},{"fields":{"slug":"/posts/TIL/2023/2023-11/AWS - EBS용량관리/"},"timeToRead":1,"frontmatter":{"title":"AWS - EBS 용량 관리","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-11/NestJs/DynamicModule/"},"timeToRead":1,"frontmatter":{"title":"NestJs - Dynamic Module","series":"NestJs 개념 정리"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/OpenTelemetry/메트릭/"},"timeToRead":1,"frontmatter":{"title":"OpenTelemetry  - 메트릭","series":"TIL"}},{"fields":{"slug":"/posts/사이드프로젝트-배포-회고/"},"timeToRead":2,"frontmatter":{"title":"사이드 프로젝트 배포 회고","series":"배포 회고"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/OpenTelemetry/시그널-분산추적/"},"timeToRead":1,"frontmatter":{"title":"OpenTelemetry 시그널 - 분산 추적","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/OpenTelemetry/컨텍스트-전파/"},"timeToRead":1,"frontmatter":{"title":"OpenTelemetry - 컨텍스트 전파","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/OpenTelemetry/파이프라인-리소스/"},"timeToRead":1,"frontmatter":{"title":"OpenTelemetry - 파이프라인, 리소스","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/OpenTelemetry/"},"timeToRead":1,"frontmatter":{"title":"OpenTelemetry","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/제3자-결제-애플/"},"timeToRead":3,"frontmatter":{"title":"관찰 가능성 엔지니어링 & 제 3자 결제 - 애플","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/제3자-결제-구글/"},"timeToRead":1,"frontmatter":{"title":"제 3자 결제 - 구글","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/PortOne-웹훅/"},"timeToRead":1,"frontmatter":{"title":"PortOne - 웹훅","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-10/PortOne-인증결제/"},"timeToRead":1,"frontmatter":{"title":"PortOne - 인증결제","series":"TIL"}},{"fields":{"slug":"/posts/book/대용량-DB-솔루션/1장/"},"timeToRead":1,"frontmatter":{"title":"대용량 DB 솔루션 1장 정리","series":"대용량 DB 솔루션"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/PortOne/"},"timeToRead":1,"frontmatter":{"title":"PortOne - 비인증결제 정리","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/인앱-결제/환불/"},"timeToRead":1,"frontmatter":{"title":"인앱 결제 환불 정리","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/인앱-결제/"},"timeToRead":1,"frontmatter":{"title":"인앱 결제 정리","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/SRE/"},"timeToRead":1,"frontmatter":{"title":"SRE (Site Reliability Engineering) 개념","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/SQL-INTERSECT/"},"timeToRead":1,"frontmatter":{"title":"SQL - INTERSECT","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/SQL-UNION-ALL/"},"timeToRead":1,"frontmatter":{"title":"SQL - UNION / UNION ALL","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/MongoDB-local-참가-후기/"},"timeToRead":1,"frontmatter":{"title":"MongoDB.local Seoul 짧은 참가 후기","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/OLTP VS OLAP/"},"timeToRead":1,"frontmatter":{"title":"OLTP vs OLAP","series":"TIL"}},{"fields":{"slug":"/posts/TIL/2023/2023-09/TypeORM-Upsert-중복제거/"},"timeToRead":1,"frontmatter":{"title":"TypeORM orIgnore 메소드 Upsert시 중복 데이터 INSERT 검증 방식 변경","series":"TIL"}}],"group":[{"fieldValue":"NestJs","totalCount":2},{"fieldValue":"NestJs 개념 정리","totalCount":3},{"fieldValue":"TIL","totalCount":19},{"fieldValue":"가상 면접 사례로 배우는 대규모 시스템 설계 기초","totalCount":1},{"fieldValue":"글 잘 쓰기","totalCount":1},{"fieldValue":"대용량 DB 솔루션","totalCount":1},{"fieldValue":"리서치 기록","totalCount":1},{"fieldValue":"배포 회고","totalCount":3},{"fieldValue":"책 리뷰","totalCount":3},{"fieldValue":"프롬프트","totalCount":1}]},"markdownRemark":{"id":"db06eefb-2b81-5df7-b9a0-4ce5280fc8be","html":"<h1>TypeORM orIgnore 메소드 Upsert시 중복 데이터 INSERT 검증 방식 변경</h1>\n<h2>기존 Upsert 방식</h2>\n<ul>\n<li>저장하려는 데이터를 조회 쿼리를 통해서 중복 조회하여 해당 조건에 부함하는 데이터가 있다면, INSERT 하지않고, 해당 데이터 리턴하는 방식</li>\n</ul>\n<p>코드 예시)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"ts\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">* Upsert후 해당 데이터 리턴</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">* </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">* </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">data</span><span class=\"mtk3\"> UpdateDataDto</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">* </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">* </span><span class=\"mtk4\">@returns</span><span class=\"mtk3\"> result DataEntity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">async</span><span class=\"mtk1\"> </span><span class=\"mtk11\">upsertData</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dto</span><span class=\"mtk1\">: </span><span class=\"mtk12\">UpdateDataDto</span><span class=\"mtk1\">):</span><span class=\"mtk10\">Promise</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">DataEntity</span><span class=\"mtk1\">&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tconst </span><span class=\"mtk12\">findDuplicateData</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dataRepository</span><span class=\"mtk1\">.</span><span class=\"mtk11\">findOne</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">where</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk12\">title:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dto</span><span class=\"mtk1\">.</span><span class=\"mtk12\">title</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">if</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">findDuplicateData</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DataEntity</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">title</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dto</span><span class=\"mtk1\">.</span><span class=\"mtk12\">title</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">id</span><span class=\"mtk1\">} = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dataRepository</span><span class=\"mtk1\">.</span><span class=\"mtk11\">save</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dataRepository</span><span class=\"mtk1\">.</span><span class=\"mtk11\">findOne</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t</span><span class=\"mtk12\">where</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t\t</span><span class=\"mtk12\">id:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t} else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\treturn findDuplicateData;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2>변경된 Upsert 방식</h2>\n<ul>\n<li>중복되면 안되는 엔티티 클래스의 해당 칼럼에 Unique 데코레이터를 사용하여 Unique_key 세팅</li>\n<li>저장하려는 데이터를 TypeORM QueryBuilder API의 orIgnore 메소드를 추가하여 INSERT 쿼리 실행\n<ul>\n<li>만약 저장하려는 데이터가 중복되었다면, 해당 INSERT 쿼리 실행 ignore 처리됨</li>\n</ul>\n</li>\n<li>저장하려던 데이터로 조회해서 해당하는 데이터 리턴하는 방식</li>\n</ul>\n<p>코드 예시)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"ts\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * Upsert후 해당 데이터 리턴</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">dto</span><span class=\"mtk3\"> UpdateDataDto  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@returns</span><span class=\"mtk3\"> result DataEntity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">async</span><span class=\"mtk1\"> </span><span class=\"mtk11\">upsertData</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dto</span><span class=\"mtk1\">: </span><span class=\"mtk12\">UpdateDataDto</span><span class=\"mtk1\">): </span><span class=\"mtk10\">Promise</span><span class=\"mtk1\">&lt;</span><span class=\"mtk12\">DataEntity</span><span class=\"mtk1\">&gt; {  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  const </span><span class=\"mtk12\">data</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DataEntity</span><span class=\"mtk1\">();  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  data.</span><span class=\"mtk12\">id</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">null</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  data.\b</span><span class=\"mtk12\">title</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dto</span><span class=\"mtk1\">.</span><span class=\"mtk12\">title</span><span class=\"mtk1\">;  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  await this.</span><span class=\"mtk12\">dataRepository</span><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    .createQueryBuilder(</span><span class=\"mtk8\">&#39;data&#39;</span><span class=\"mtk12\">)  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">    .insert()  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">    .values(data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">    .orIgnore()  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">    .execute();  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">  return this.getOneByTitle(title);  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">}</span></span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","fields":{"slug":"/posts/TIL/2023/2023-09/TypeORM-Upsert-중복제거/"},"timeToRead":1,"frontmatter":{"title":"TypeORM orIgnore 메소드 Upsert시 중복 데이터 INSERT 검증 방식 변경","tags":["TypeORM"],"date":"2023-09-12T03:23:12.000Z","image":null,"series":"TIL"}}},"pageContext":{"id":"db06eefb-2b81-5df7-b9a0-4ce5280fc8be"}},"staticQueryHashes":["3810308631","4253518612"],"slicesMap":{}}